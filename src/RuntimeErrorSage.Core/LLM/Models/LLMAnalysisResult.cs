using System;
using System.Collections.Generic;
using RuntimeErrorSage.Core.Models.Common;

namespace RuntimeErrorSage.Core.LLM.Models
{
    /// <summary>
    /// Represents the result of LLM-based error analysis.
    /// </summary>
    public class LLMAnalysisResult
    {
        /// <summary>
        /// Gets or sets the unique identifier for this analysis.
        /// </summary>
        public string Id { get; set; } = Guid.NewGuid().ToString();

        /// <summary>
        /// Gets or sets the timestamp when the analysis was performed.
        /// </summary>
        public DateTime Timestamp { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the error explanation generated by the LLM.
        /// </summary>
        public string Explanation { get; set; } = string.Empty;

        /// <summary>
        /// Gets or sets the root cause analysis.
        /// </summary>
        public string RootCause { get; set; } = string.Empty;

        /// <summary>
        /// Gets or sets the confidence score (0-1) of the analysis.
        /// </summary>
        public float Confidence { get; set; }

        /// <summary>
        /// Gets or sets the severity level of the error.
        /// </summary>
        public SeverityLevel Severity { get; set; }

        /// <summary>
        /// Gets or sets the suggested remediation steps.
        /// </summary>
        public List<string> RemediationSteps { get; set; } = new();

        /// <summary>
        /// Gets or sets the prevention suggestions.
        /// </summary>
        public List<string> PreventionSuggestions { get; set; } = new();

        /// <summary>
        /// Gets or sets any additional metadata from the LLM.
        /// </summary>
        public Dictionary<string, object> Metadata { get; set; } = new();

        /// <summary>
        /// Gets or sets the model version used for analysis.
        /// </summary>
        public string ModelVersion { get; set; } = "Qwen-2.5-7B-Instruct-1M";

        /// <summary>
        /// Gets or sets the processing time in milliseconds.
        /// </summary>
        public long ProcessingTimeMs { get; set; }

        /// <summary>
        /// Gets or sets whether the analysis was successful.
        /// </summary>
        public bool IsSuccessful { get; set; }

        /// <summary>
        /// Gets or sets any error that occurred during analysis.
        /// </summary>
        public string? Error { get; set; }
    }
} 